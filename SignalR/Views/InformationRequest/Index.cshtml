@using Infragistics.Web.Mvc
@model SignalR.Controllers.InfoViewModel

@{
    ViewBag.Title = "Index";
}
<br />
<br />
<div class="row">
    <div class="col-md-12">
        <div class="panel-group">
            <div class="panel panel-primary">
                <div class="panel-heading" >
                    Add /Edit Information
                </div>
                <div class="panel-body">
                    <div class="form-group row">
                        <div class="col-md-2 form-label">
                            <label>Id:</label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(x => x.InformationRequest.Id)
                            
                        </div>
                    </div>



                    <div class="form-group row">
                        <div class="col-md-2 form-label">
                            <label>Status:</label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextAreaFor(x => x.InformationRequest.Status)
                        </div>
                    </div>


                    <div class="form-group row">
                        <div class="col-md-2 form-label">
                           
                                <label>Description:</label>
                            </div>
                            <div class="col-md-8">
                                @Html.TextAreaFor(x => x.InformationRequest.Description)
                            </div>
                            </div>

                            <div class="col-md-12 pull-right text-right">

                                <button type="btn btn-primary" class="btn cancel" onclick="InsertInfoRequest()">
                                    <i class="icon-refresh"></i>Add Information Request
                                </button>

                                <button type="submit" class="btn btn-primary" onclick="UpdateInformationRequest()" data-dismiss="modal" id="search">
                                    <i class="icon-search"></i>Update Information Request
                                </button>
                                <button type="submit" class="btn btn-danger" onclick="DeleteInfoRequest();" data-dismiss=" modal" id="search">
                                    <i class="icon-search"></i>Delete Information Request
                                </button>

                            </div>


                        </div>

                    </div>
                </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="panel-group">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    List of Information Requests
                </div>
                <div class="panel-body">
                    <table id="grid"></table>
                </div>

            </div>

        </div>
        


    </div>
</div>
@section scripts
{

    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">

        $(function () {

            var notificationFromHub = $.connection.informationRequestHub;

            $.connection.hub.start().done(function () {

                FetchInformationRequests();
            });

            // Notify to client with the recent updates

            notificationFromHub.client.updatedClients = function () {

                FetchInformationRequests();

            };
            notificationFromHub.client.updatedModifyInformationRequestClients = function (request) {

                debugger;
                //var row = $('#grid').find('tr[data-id=' + request.Id + ']');
                //var rec = $("#grid").igGrid("findRecordByKey", request.Id);
                $("#grid").igGridUpdating("updateRow", request.Id, request);

                

            };
        });

        function selectRecordByPrimaryKey(primaryKeyValue) {
            var rows = $("#grid").igGrid("rows");
            $(rows).each(function (index, el) {
                if ($(el).attr("data-id") == primaryKeyValue)
                    $("#grid1").igGridSelection("selectRow", index);
            });
        }

        function getColumnIndexByKey(columnKey) {
            var columns = $("#grid").igGrid("option", "columns");
            var columnIndex = 0;
            for (var i = 0; i < columns.length; i++) {
                if (columns[i].hidden)
                    continue;
                if (columns[i].key === columnKey) {
                    return columnIndex;
                }
                columnIndex++;
            }
            return -1;
        }

        function FetchInformationRequests() {

            var model = $('#dataTable');
            $.ajax({
                url: '/InformationRequest/GetAllInformationRequest',
                contentType: 'application/json ; charset:utf-8',
                type: 'GET',

            }).success(function (result) {
                $("#grid").igGrid("option", "dataSource", result.Records);
                $("#grid").igGrid("dataBind");
            });
        }

        var data = [];

        $("#grid").igGrid({
            primaryKey: "Id",
            width: '100%',
            columns: [
                { headerText: "Id", key: "Id", dataType: "number", width: "15%" },
                { headerText: "Status", key: "Status", dataType: "string", width: "25%" },
                { headerText: "Description", key: "Description", dataType: "string", width: "25%" },
            ],
            autofitLastColumn: false,
            autoGenerateColumns: false,
            features: [
                {
                    name: "Sorting",
                    sortingDialogContainment: "window"
                },
                {
                    name: "Selection"
                },
                {
                    name: "Paging",
                    pageSize: 10
                },
            { name: "Updating", editMode: "none", enableAddRow: false, enableDeleteRow: false }
            ]
        });

        // Update Employee Record
        function UpdateInformationRequest() {

            var employee = {
                Description: $('#InformationRequest_Description').val(),
                Status: $('#InformationRequest_Status').val(),
                Id: $('#InformationRequest_Id').val(),
            };

            $.ajax({
                url: '/InformationRequest/Edit',
                type: 'POST',
                data: JSON.stringify(employee),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    //alert('Employee updated Successfully');
                },
                error: function (e) {
                    alert('Employee could not be updated');
                }
            });
        }

        function InsertInfoRequest() {
            var employee = {
                Description: $('#InformationRequest_Description').val(),
                Status: $('#InformationRequest_Status').val(),
                Id: $('#InformationRequest_Id').val(),
            };
            $.ajax({
                url: '/InformationRequest/Create',
                type: 'POST',
                data: JSON.stringify(employee),
                contentType: "application/json;charset=utf-8",
                success: function (data) {
                    //alert('Employee added Successfully');
                },
                error: function () {
                    alert('Employee not Added');
                }
            });
        }
    </script>


}

